<?php

namespace App\Exceptions;

use Illuminate\Auth\AuthenticationException;
use Illuminate\Database\Eloquent\ModelNotFoundException;
use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler;
use Illuminate\Http\JsonResponse;
use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
use Throwable;

class Handler extends ExceptionHandler
{
    /**
     * A list of the exception types that are not reported.
     *
     * @var array
     */
    protected $dontReport = [
        //
    ];

    /**
     * A list of the inputs that are never flashed for validation exceptions.
     *
     * @var array
     */
    protected $dontFlash = [
        'current_password',
        'password',
        'password_confirmation',
    ];

    /**
     * Register the exception handling callbacks for the application.
     *
     * @return void
     */
    public function register()
    {
        $this->reportable(function (Throwable $e) {
            //
        });
    }
    public function render($request, Throwable $e)
    {
        if ($e instanceof ModelNotFoundException || $e instanceof NotFoundHttpException){
            return $this->NotFoundExceptionMessage($request, $e);
        }

        return parent::render($request, $e);
    }

    public function NotFoundExceptionMessage(\Illuminate\Http\Request $request, $e)
    {
        return $request->acceptsJson() ? new JsonResponse([
            'data' => [
                'message' => 'not found',
            ],
            'status' => 'error'
        ], 404) : parent::render($request, $e); // TODO: Change the autogenerated stub;
    }

    protected function unauthenticated($request, AuthenticationException $exception)
    {
        return $this->shouldReturnJson($request, $exception)
            ? response()->json(['data'=>['message' => 'نیاز به احراز هویت'],'status'=>'error'], 401)
            : redirect()->guest($exception->redirectTo() ?? route('login'));
    }
}
